#19. Write a program to implement circular queue using array

#include<iostream>
#include<queue>
using namespace std;

class Queue{
    private:
        int size;
        int *arr;
        int front;
        int rear;
    public:
        Queue(int s){
            size = s;
            arr = new int[size];
            front = -1;
            rear = -1;
        }
        
        ~Queue(){
            delete[] arr;
        };
        
        bool isempty(){
            return (front == -1);
        };
        
        bool isfull(){
            return ((rear+1) % size == front);
        };
        
        void insert(int value){
            if(isfull()){
                cout<<"Stack is full"<<endl;
                return;
            }
            if(front == -1){
                front = 0;
            }
            rear = (rear + 1) % size;
            arr[rear] = value;
            cout<<"element insert is "<<arr[rear]<<endl;
        };
        
        void dequeue(){
            if(isempty()){
                cout<<"Stack is empty"<<endl;
                return ;
            }
            int dequeuedelement = arr[front];
            if(front == rear){
                front = -1;
                rear = -1;
            }
            else{
                (front = (front+1) % size);
            }
            cout<<"Element dequeued element is"<<dequeuedelement<<endl;
        };
        
        int frontelement(){
            if(isempty()){
                cout<<"Queue is empty"<<endl;
                return -1;
            }
            else{
                return arr[front];
            }
        };
        
        int rearelement(){
            if(isempty()){
                cout<<"Queue is empty"<<endl;
                return -1;
            }
            else{
                return arr[rear];
            }
        };
        
        void display(){
            int cond = false;
            int i = front;
            while(cond!=true){
                cout<<arr[i];
                if(i == rear) cond = true;
                i++;
            }
        };
};

int main(){
    int s;
    cout<<"Enter the size of queue"<<endl;
    cin>>s;
    Queue q(s);
    q.insert(10);
    q.insert(20);
    q.insert(30);
    q.insert(40);
    q.insert(50);
    q.display();
    q.dequeue();
    q.dequeue();
    q.display();
    cout<<"Front element is "<<q.frontelement()<<endl;
    cout<<"Rear element is "<<q.rearelement()<<endl;
    q.dequeue();
    // if(isempty()){
    //     cout<<"Queue is empty"<<endl;
    // }
    // else{
    //     cout<<"Queue is not empty"<<endl;
    // }
    // if(isfull()){
    //     cout<<"Queue is full"<<endl;
    // }
    // else{
    //     cout<<"Queue is not full"<<endl;
    // }
    q.dequeue();
    q.dequeue();
    q.display();
}
